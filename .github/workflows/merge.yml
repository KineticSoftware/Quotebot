name: Build and Push Container

on:
  push:
    branches:
      - 'main'

env:
  SLN_PATH: './src/Quotebot.sln'
  BINARIES: './output'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate Version
        shell: pwsh
        run: |
          $version = "1.$([System.DateTime]::Now.ToString('yyMM')).$([System.DateTime]::Now.ToString('dd'))$($Env:GITHUB_RUN_NUMBER).$($Env:GITHUB_RUN_ATTEMPT)"
          echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          Write-Host $version

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: false

      - name: dotnet build
        run: dotnet build ${{ENV.SLN_PATH}} --configuration Release -p:Version=${{ENV.BUILD_VERSION}} --output ${{env.BINARIES}}


      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: quotebot-artifact
          path: |
            ./dockerfile
            ./container-app.json
            ${{env.BINARIES}}
            !${{env.BINARIES}}/runtimes_data/win**/**
          if-no-files-found: error
          
      - name: Determine If Master
        run: |
          release_branch=$(test "${{ github.ref }}" = refs/heads/main && echo true || echo false)
          echo "Is this a release branch? ${release_branch}"
          echo "SHOULD_TAG=${release_branch}" >> $GITHUB_ENV
          
      - name: Create a GitHub release
        if: ${{ success() && env.SHOULD_TAG=='true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_VERSION }}
    
    outputs:
      build_version: ${{ env.BUILD_VERSION }}
    
  container:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Azure Container Registry 
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: quotebot-artifact
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: 'conerd.azurecr.io'
          username: ${{ secrets.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build Release Container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfile
          build-args: |
            source=${{env.BINARIES}}
          push: true
          tags: conerd.azurecr.io/quotemage:${{ needs.build.outputs.build_version }},conerd.azurecr.io/quotemage:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build
      - container
    environment:
      name: Production      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: quotebot-artifact
          
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.Azure_ServicePrincipal }}

      - name: Deploy to Azure
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: CoNerd
          template: ./container-app.json
          deploymentName: MageBot-Deployment-${{ needs.build.outputs.build_version }}
          parameters: container-version=${{ needs.build.outputs.build_version }} conerdazurecrio-conerd-pwd=${{ secrets.CONTAINER_REGISTRY_PASSWORD }} keyvault-api-clientid=${{ secrets.KEYVAULT_CLIENTID }} keyvault-api-secret=${{ secrets.KEYVAULT_SECRET }} keyvault-secret-url=${{ secrets.KEYVAULT_URI }}
